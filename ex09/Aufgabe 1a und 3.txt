Aufgabe1
Die Klasse nutzt folgende 13 Klassen:

 java.io.BufferedInputStream;
  java.io.ByteArrayInputStream;
  java.io.ByteArrayOutputStream;
  java.io.IOException;
  java.io.InputStream;
  java.util.jar.JarEntry;
  java.util.jar.JarFile;
  java.util.jar.Manifest;
  java.util.zip.ZipEntry;
  java.util.zip.ZipException;
  java.util.zip.ZipInputStream;
  sun.misc.JarIndex;
  sun.security.util.ManifestEntryVerifier;

Und von den folgenden 7 Klassen wird ein Objekt erzeugt:

ByteArrayOutputStream
ByteArrayInputStream
BufferedInputStream
doneEntryVerifier
JarVerifier
JarEntry
Manifest

b)
...


Kopplung von A ist größer als die von A1 und A2, da A von zwei Klassen abhängig ist während A1 und A2 jeweils nur zu einer Klasse abhängig sind.
Die Kohäsion hängt davon ab, wie Klassen B und C von A verwendet werden,
gibt es in A ausschließlich Methoden die jeweils nur B oder C verwenden 
und diese sind nach der Aufteilung entsprechend in A1 bzw. A2 zu finden,
so hat sich die Kohäsion von A1 bzw. A2 gegenüber A verbessert, da man 
offensichtlich zwei verschiedene Aufgaben der Klasse A problemlos 
aufteilen kann. Andernfalls ist Code-Duplikation zum Aufspalten 
unvermeidlich und die Kohäsion verschlechtert sich. Die Kohäsion, wie auch
die Kopplung von B und C werden durch die Aufteilung nicht beeinflusst.